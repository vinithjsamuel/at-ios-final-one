// Generated by CoffeeScript 1.7.1
(function() {
  var app;

  app = angular.module('ratings', []);

  app.directive("angularRatings", function() {
    return {
      restrict: 'E',
      scope: {
        model: '=ngModel',
        notifyId: '=notifyId'
      },
      replace: true,
      transclude: true,
      template: '<div><ol class="angular-ratings">' + '<li ng-class="{active:model>0,over:over>0}">1</li>' + '<li ng-class="{active:model>1,over:over>1}">2</li>' + '<li ng-class="{active:model>2,over:over>2}">3</li>' + '<li ng-class="{active:model>3,over:over>3}">4</li>' + '<li ng-class="{active:model>4,over:over>4}">5</li>' + '</ol></div>',
      controller: [
        '$rootScope','$scope', '$attrs', '$http','$cookieStore','apiFactory', function($rootScope,$scope, $attrs, $http,$cookieStore,apiFactory) {
          $scope.over = 0;
		  $rootScope.ratingUpdate={};
          $scope.setRating = function(rating) {
            $scope.model = rating;
            $scope.$apply();
            if ($attrs.notifyUrl !== void 0 && $scope.notifyId) {
			  $rootScope.ratingUpdate['resMessage']=[];
			  if($cookieStore.get('userid')==0)
			  {
				$rootScope.ratingUpdate.resMessage[0]={msgType:'alert-error',msg:'Please login before rating the deals.'};
				return false;
			  }
              return $http.post($attrs.notifyUrl, {
                id: $scope.notifyId,
                rating: rating
              }).success(function(res){
				
			  	if(res.success)
				{
					if(res.success.status==0)
					{
						$rootScope.ratingUpdate.resMessage[0]={msgType:'alert-error',msg:res.success.message};
					}
					if(res.success.status==1)
					{
						$rootScope.ratingUpdate.resMessage[0]={msgType:'alert-success',msg:res.success.message};
					}
					apiFactory.getCats(function(data){
						 $rootScope.loading = false;
						 $rootScope.categories=data.product_category;
						 $rootScope.deals=data.deals;
						 var data={};
						 data['deals']=$rootScope.deals;
						 $rootScope.$broadcast('$getDeals',data);
						 var result = $.grep($rootScope.deals, function(e){ return e.ID == $scope.notifyId; });
						 if(result.length!=0)
						 {
							 var deal=result[0];
							 $rootScope.$broadcast('$getDealdetails',deal);
						 }
			    	 });
				}
			  }).error(function(data) {
                if (typeof data === 'string') {
                  alert(data);
                }
                return $scope.model = 0;
              });
            }
          };
          return $scope.setOver = function(n) {
            $scope.over = n;
            return $scope.$apply();
          };
        }
      ],
      link: function(scope, iElem, iAttrs) {
        if (iAttrs.notifyUrl !== void 0) {
          return angular.forEach(iElem.children(), function(ol) {
            return angular.forEach(ol.children, function(li) {
              li.addEventListener('mouseover', function() {
                return scope.setOver(parseInt(li.innerHTML));
              });
              li.addEventListener('mouseout', function() {
                return scope.setOver(0);
              });
              return li.addEventListener('click', function() {
                return scope.setRating(parseInt(li.innerHTML));
              });
            });
          });
        }
      }
    };
  });

}).call(this);

//# sourceMappingURL=angular.ratings.js.map
